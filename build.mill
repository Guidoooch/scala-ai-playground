import mill._
import mill.scalalib._
import mill.scalalib.publish._

object Versions {
  val Scala: String = "3.7.1"
}

trait MyModule extends PublishModule {
  def publishVersion = "0.0.1"

  def pomSettings: T[PomSettings] = PomSettings(
    description = "Hello",
    organization = "ai.guidoch",
    url = "https://github.com/Guidoooch/scala-ai-playground",
    licenses = Seq(License.MIT),
    versionControl = VersionControl.github("Guidoooch", "scala-ai-playground"),
    developers = Seq(Developer("Guidoooch", "Guido Maresca", "https://github.com/Guidoooch"))
  )
}

trait MyScalaModule extends MyModule with ScalaModule {
  def ivyDeps: T[Agg[Dep]] = Agg(
    ivy"co.fs2::fs2-core:3.9.4",                // Streaming library
    ivy"com.github.jelmerk:hnswlib-core:1.1.0", // Vector database client (using FAISS via JNI)
    ivy"com.github.jelmerk:hnswlib-scala_2.13:1.1.0",
    ivy"com.google.genai:google-genai:1.4.1",
    ivy"com.lihaoyi::scalatags:0.13.1",
    ivy"com.lihaoyi::upickle:3.2.0",                 // JSON processing
    ivy"com.softwaremill.sttp.client3::circe:3.9.5", // STTP JSON support
    ivy"com.softwaremill.sttp.client3::core:3.9.5",  // HTTP client for API interactions
    ivy"io.circe::circe-core:0.14.6",
    ivy"io.circe::circe-generic:0.14.6",
    ivy"org.apache.commons:commons-text:1.11.0", // Text processing utilities
    ivy"org.typelevel::cats-effect:3.5.4"        // Async programming
  )

  object test extends ScalaTests {
    def ivyDeps: T[Agg[Dep]] = Agg(ivy"com.lihaoyi::utest:0.8.5")
    def testFramework        = "utest.runner.Framework"
  }
}


trait CommonModule extends MyScalaModule

object llm extends MyScalaModule {

  override def scalaVersion: T[String] = Versions.Scala
}
